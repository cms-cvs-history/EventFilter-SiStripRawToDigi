process Example = {

service = MessageLogger {
	vstring destinations = { "event.log", "error.log", "debug.log" } // names of "log" files 
	PSet error.log = { string threshold = "WARNING" PSet default = { int32 limit = -1 bool noLineBreaks = false } } 
	PSet event.log = { string threshold = "INFO"    PSet default = { int32 limit = -1 bool noLineBreaks = false } }
	PSet debug.log = { string threshold = "DEBUG"   PSet default = { int32 limit = -1 bool noLineBreaks = false } }
	vstring debugModules = { "*" }			// comment to inhibit ("time-consuming") debug verbosity 
}

es_source FedCabling = SiStripFedCablingTrivialBuilder 
{ 
	untracked uint32 NumberOfFeds = 2		// number of FEDs in cabling map 
}

source = EmptySource 
{ 
	untracked int32 maxEvents = 100			// number of events in event loop
}

module DigiSource = SiStripTrivialDigiSource 
{
	untracked bool   TestDistribution = false	// enable test distribution (and => inhibit random number generator)
	untracked double MeanOccupancy = 1.0		// mean strip occupancy (used by random number generator)
       	untracked double RmsOccupancy = 0.0		// spread in strip occupancy (used by random number generator)
}

module DigiToRaw = SiStripDigiToRawModule 
{
	string InputModuleLabel = "DigiSource"		// module label of "digi source"
	untracked string FedReadoutMode = "VIRGIN_RAW"	// FED readout mode (packs digi information accordingly in payload)
       	untracked int32  AppendedBytes = 0		// adds number of bytes appended prior to FED buffer (soon to be deprecated)
}

module RawToDigi = SiStripRawToDigiModule 
{
	string InputModuleLabel = "DigiToRaw"		// module label of "FEDRawData source"
	untracked int32 AppendedBytes = 0		// removes number of bytes appended prior to FED buffer
       	untracked int32 FedBufferDumpFreq = 0		// frequency with which FED buffers are dumped to stdout
       	untracked bool  UseFedKey = false		// switch b/w DetId (default) and FedKey to index digi collections
       	untracked int32 TriggerFedId = 1023		// source id for trigger FED information
}

module AnalyzeDigis = SiStripAnalyzeDigis 
{
	string InputModuleLabel = "RawToDigi"		// module label of "FEDRawData source"
}

module PoolOutput = PoolOutputModule
{ 
	untracked string fileName ="output.root" 	// output file name
	untracked vstring outputCommands = { "keep *" }	// make persistent all data types 
}

path p = { DigiSource, DigiToRaw, RawToDigi, AnalyzeDigis }
endpath e = { PoolOutput }

}

