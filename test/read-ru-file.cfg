process READ-RU-FILE = {

service = MessageLogger {
	vstring destinations = { "cout", "cerr", "errors.txt", "debug.txt" }
	PSet cout       = { string threshold = "INFO"    PSet default = { int32 limit = -1 bool noLineBreaks = false } }
	PSet cerr       = { string threshold = "WARNING" PSet default = { int32 limit = -1 bool noLineBreaks = false } }
	PSet errors.txt = { string threshold = "WARNING" PSet default = { int32 limit = -1 bool noLineBreaks = false } }
	PSet debug.txt  = { string threshold = "DEBUG"   PSet default = { int32 limit = -1 bool noLineBreaks = false } }
	#vstring debugModules = { "*" } //@@ uncomment this line for debug statements!
}

#service = Tracer {}

service = DaqMonitorROOTBackEnd {}

#service = MonitorDaemon {
# 	 untracked bool AutoInstantiate = true //@@ DQM thread in background
#        untracked int32 reconnect_delay = 5   //@@ [secs]
#        untracked string DestinationAddress = "localhost" //@@ collector host
#        untracked int32 SendPort = 9090       //@@ collector port 
#        untracked int32 UpdateDelay = 3000    //@@ monitoring period [ms]
#        untracked string NameAsSource = "FU0" //@@ DQM source name
#}

es_source FedCabling = SiStripFedCablingBuilderFromDb
{ 
	untracked string User = "cmsdbtr"
	untracked string Passwd = "fred"
	untracked string Path = "devdb"
	untracked string Partition = "904"
	untracked bool   UseXmlFile = true
	untracked string XmlFilename = "/afs/cern.ch/cms/cmt/onlinedev/data/petal11.xml"
}

source = TBRUInputSource
{
	untracked vstring fileNames = { "/afs/cern.ch/cms/cmt/onlinedev/data/Timing1.root" }
	untracked int32   maxEvents = -1 //@@ all events
	untracked bool    quiet = false	
	untracked int32   branches = 4 //@@ should be equal to 2*(nFEDs+1)
}

module RawToDigi = SiStripRawToDigiModule 
{
	string InputModuleLabel = "TBRUInputSource"
	untracked int32 AppendedBytes = 0
       	untracked int32 FedBufferDumpFreq = 0
       	untracked bool  UseFedKey = true
       	untracked int32 TriggerFedId = 1023
}

module DqmSource = CommissioningSource
{
	string InputModuleLabel = "RawToDigi"
	untracked string CommissioningTask = "APV_TIMING" //@@ this should match input RU file!
	untracked int32 HistoUpdateFreq = 100
}

module PoolOutput = PoolOutputModule 
{ 
	untracked string fileName ="output.root" 
	untracked vstring outputCommands = { "keep *" } //@@ necessary?
}

path p = { RawToDigi, DqmSource }
#endpath e = { PoolOutput }

}

